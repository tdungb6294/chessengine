@page "/auth"
@using System.Security.Claims
@attribute [Authorize]
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <div>Hello, @username</div>
        <a href="auth/logout">Log out</a>
    </Authorized>
    <NotAuthorized>
        <a href="auth/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string username = "";
    private string emailAddress = "";
    [CascadingParameter]
    public Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState? state = null;
        if (AuthenticationStateTask is not null)
        {
            state = await AuthenticationStateTask;
        }

        username = state?.User?.Identity?.Name ?? string.Empty;
        emailAddress = state?.User.Claims
        .Where(c => c.Type.Equals(System.Security.Claims.ClaimTypes.Email))
        .Select(c => c.Value)
        .FirstOrDefault() ?? string.Empty;

        await base.OnInitializedAsync();
    }
}
